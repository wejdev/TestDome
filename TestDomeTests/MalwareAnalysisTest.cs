using JetBrains.Annotations;
using TestDome;

namespace TestDomeTests;

[TestSubject(typeof(MalwareAnalysis))]
public class MalwareAnalysisTests
{
    [Theory]
    [InlineData(new[] { 4, 1, 3, 5, 4, 7, 9 }, 3, new[] { -1, -1, -1, 5, -1, -1, -1 })]
    [InlineData(new[] { 4, 1, 3, 5, 4, 7, 9 }, 1, new[] { -1, 1, 3, 5, 4, 7, -1 })]
    [InlineData(new[] { 4, 1, 3, 5, 4, 7, 9 }, 5, new[] { -1, -1, -1, -1, -1, -1, -1 })]
    [InlineData(new[] { 4, 1, 3, 5, 4, 7, 9 }, 7, new[] { -1, -1, -1, -1, -1, -1, -1 })]
    [InlineData(new[] { 10, 20, 30 }, 1, new[] { -1, 20, -1 })]
    [InlineData(new[] { 1, 2, 3, 4, 5 }, 2, new[] { -1, -1, 3, -1, -1 })]
    [InlineData(new[] { 7, 8, 9, 10 }, 0, new[] { 7, 8, 9, 10 })]
    [InlineData(new[] { 1, 2, 3 }, 5, new[] { -1, -1, -1 })]
    public void Simulate_Changes_First_And_Last_Elements(int[] input, int s, int[] expected)
    {
        // Act
        var actual = MalwareAnalysis.Simulate(input, s);

        // Assert
        Assert.Equal(expected, actual);
    }
}
